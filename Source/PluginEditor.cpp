/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
SylfelCabAudioProcessorEditor::SylfelCabAudioProcessorEditor (SylfelCabAudioProcessor* ownerFilter)
    : AudioProcessorEditor (ownerFilter)
{
    // This is where our plugin's editor size is set.
    setSize (400, 300);

	bypassBtn.setButtonText("Bypass");
    bypassBtn.addListener(this);
	addAndMakeVisible(&bypassBtn);

    addAndMakeVisible(&label);

    choiceButton.setButtonText("...");
    choiceButton.addListener(this);
    addAndMakeVisible(&choiceButton);

	startTimer(50);
}

SylfelCabAudioProcessorEditor::~SylfelCabAudioProcessorEditor()
{

}

//==============================================================================
void SylfelCabAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);
    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("Sylfel CAB", 0, 0, getWidth(), getHeight(), Justification::centred, 1);
}


void SylfelCabAudioProcessorEditor::resized()
{
    bypassBtn.setBounds (10, 10, getWidth() , 30);
    label.setBounds(10, 40, getWidth() - 40 , 30);
    choiceButton.setBounds(getWidth() - 38, 40, 30, 20);
}

//==============================================================================
// This timer periodically checks whether any of the filter's parameters have changed...
void SylfelCabAudioProcessorEditor::timerCallback()
{
    SylfelCabAudioProcessor* ourProcessor = getProcessor();
    bypassBtn.setToggleState(ourProcessor->bypass == 1.0f, false);
    label.setText(ourProcessor->impulsePath, false);
}

void SylfelCabAudioProcessorEditor::buttonClicked (Button * button)
{
    if (button == &bypassBtn) {
        getProcessor()->setParameterNotifyingHost (SylfelCabAudioProcessor::bypassParam,
            (button->getToggleState() ? 1.0f : 0.0f));
    } else if (button == &choiceButton) {
        FileChooser fc ("Choose a file to open...",
                File::getCurrentWorkingDirectory(),
                "*",
                true);
        if (fc.browseForFileToOpen())
        {
            getProcessor()->setImpulsePath(fc.getResult());
        }
    }
}
